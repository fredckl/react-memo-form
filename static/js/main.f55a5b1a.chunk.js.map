{"version":3,"sources":["components/Input.js","hooks/useReady.js","components/AddressForm.js","components/DescriptionForm.js","components/FormError.js","components/ProfileForm.js","components/ContactForm.js","form/memoForm.js","components/AddressForm2.js","components/DescriptionForm2.js","components/ProfileForm2.js","components/ContactForm2.js","App.js","reportWebVitals.js","index.js"],"names":["Input","React","forwardRef","ref","onChange","value","restProps","e","target","useReady","useEffect","current","classList","add","T","setTimeout","remove","Math","floor","random","clearTimeout","AddressForm","console","log","useFormContext","control","getValues","useRef","style","padding","name","defaultValue","render","placeholder","DescriptionForm","undefined","FormError","props","prop","className","message","ProfileForm","watch","errors","firstname","isFred","toLower","rules","required","defaultValues","lastname","email","address1","address2","city","zipCode","description","ContactForm","methods","useForm","onSubmit","handleSubmit","JSON","stringify","type","isNotNilOrEmpty","complement","either","isNil","isEmpty","getPathMethods","key","path","getPathName","getErrors","getFields","getObserverFields","rejectNil","reject","removeNilFormData","compose","areEquals","prevProps","nextProps","prevData","nextData","pathName","allErrors","fields","observerFields","isEmptyFields","ifElse","filter","field","F","uniq","concat","equals","memoFormPropTypes","register","propTypes","func","isRequired","unregister","oneOfType","object","string","reset","setError","clearError","setValue","triggerValidation","formState","getFieldName","getFormValues","memoForm","shape","opts","Component","join","MemoizedComponent","memo","WrapperMemoizedComponent","map","propOr","formData","displayName","ContactForm2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f55a5b1a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Input = React.forwardRef(({ onChange, value, ...restProps }, ref) => <input onChange={e => onChange(e.target.value)} value={value || ''} ref={ref} {...restProps} />)\n\nexport default Input\n","import { useEffect } from \"react\"\n\nconst getRandomTime= () => {\n  return Math.floor(Math.random() * 2000);\n}\n\nconst useReady = (ref) =>{\n\n  useEffect(() => {\n    if (!ref?.current) {\n      return;\n    }\n    ref.current.classList.add('load')\n    const T = setTimeout(() => ref.current.classList.remove('load'), getRandomTime());\n\n    return () => (clearTimeout(T));\n  });\n}\n\nexport default useReady;","import React, { useRef } from 'react'\nimport { Controller, useFormContext } from 'react-hook-form';\nimport Input from './Input';\nimport useReady from '../hooks/useReady';\n\nconst AddressForm = () => {\n  console.log('AddressForm');\n  const { control, getValues } = useFormContext();\n  const ref = useRef();\n\n  console.log(getValues())\n\n  useReady(ref);\n\n  return (\n    <div style={{padding: '1rem 0'}} ref={ref}>\n      <Controller\n        name=\"address1\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Adresse 1\"/>}\n      />\n      <Controller\n        name=\"address2\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Adresse 2\"/>}\n      />\n      <Controller\n        name=\"zipCode\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Code postal\"/>}\n      />\n      <Controller\n        name=\"city\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Ville\"/>}\n      />\n    </div>\n  )\n}\n\nexport default AddressForm\n","import React, { useRef } from 'react'\nimport { Controller, useFormContext } from 'react-hook-form';\nimport useReady from '../hooks/useReady';\n\nconst DescriptionForm = () => {\n  console.log('DescriptionForm');\n  const { control } = useFormContext();\n  const ref = useRef();\n\n  useReady(ref);\n\n  return (\n    <div ref={ref}>\n      <Controller\n        name=\"description\"\n        defaultValue={undefined}\n        control={control}\n        render={({onChange, value}) => <textarea onChange={onChange} placeholder=\"Description courte\">{value}</textarea>}\n      />\n    </div>\n  )\n}\n\nexport default DescriptionForm\n","import React from 'react';\nimport { prop } from 'ramda';\nimport { ErrorMessage } from '@hookform/error-message';\n\nconst FormError = (props) => {\n  if (prop('hide', props)) return null;\n  return (\n    <div className=\"form-error-validation\">\n      <ErrorMessage {...props} render={({ message }) => <p>{message}</p>}/>\n    </div>\n  );\n};\n\nexport default FormError;\n","import React, { useRef } from 'react'\nimport { Controller, useFormContext } from 'react-hook-form';\nimport Input from './Input';\nimport useReady from '../hooks/useReady';\nimport { toLower } from 'ramda';\nimport FormError from './FormError';\n\nconst ProfileForm = () => {\n  console.log('ProfileForm');\n  const ref = useRef();\n  const { control, watch, errors } = useFormContext();\n  const {firstname} = watch(['firstname']);\n\n  useReady(ref);\n  const isFred = toLower(firstname || '') === 'fred';\n  return (\n    <div className=\"form-inline\" ref={ref}>\n      <Controller\n        name=\"firstname\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Prénom : tape fred\"/>}\n      />\n      <Controller\n        name=\"lastname\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Nom\"/>}\n      />\n      {!isFred && (\n        <>\n          <div>\n            <Controller\n              name=\"email\"\n              defaultValue={null}\n              control={control}\n              render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Email\"/>}\n              rules={{required: 'Ce champ est obligatoire'}}\n            />\n            <FormError name=\"email\" errors={errors}/>\n          </div>\n          <Controller\n            name=\"N° de téléphone\"\n            defaultValue={null}\n            control={control}\n            render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"N° de téléphone\"/>}\n          />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default ProfileForm\n","import React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport AddressForm from './AddressForm';\nimport DescriptionForm from './DescriptionForm';\nimport ProfileForm from './ProfileForm';\n\nconst defaultValues = {\n  firstname: null,\n  lastname: null,\n  email: null,\n  address1: null,\n  address2: null,\n  city: null,\n  zipCode: null,\n  description: null\n}\n\nconst ContactForm = () => {\n  const methods = useForm({\n    defaultValues\n  });\n\n  const onSubmit = (value) => {\n    console.log(value);\n  }\n  return (\n    <div className=\"form-content\">\n      <FormProvider {...methods}>\n        <h2>Formulaire sans memo</h2>\n        <form onSubmit={methods.handleSubmit(onSubmit)}>\n          <ProfileForm/>\n          <AddressForm/>\n          <DescriptionForm/>\n          <pre>\n            {JSON.stringify(methods.getValues(), null, 2)}\n          </pre>\n          <button type=\"submit\">Envoyer</button>\n        </form>\n      </FormProvider>\n    </div>\n  )\n}\n\nexport default ContactForm\n","import React, { memo } from 'react';\nimport {\n  equals,\n  join,\n  compose,\n  map,\n  isNil,\n  reject,\n  propOr,\n  prop,\n  isEmpty,\n  path,\n  either,\n  complement,\n  filter,\n  ifElse,\n  T,\n  F,\n  concat,\n  uniq\n} from 'ramda';\nimport { useFormContext } from 'react-hook-form';\nimport propTypes from 'prop-types';\n\nconst isNotNilOrEmpty = complement(either(isNil, isEmpty));\nconst getPathMethods = key => path(['methods', key]);\nconst getPathName = getPathMethods('pathName');\nconst getErrors = getPathMethods('errors');\nconst getFields = getPathMethods('fields');\nconst getObserverFields = getPathMethods('observerFields');\nconst rejectNil = reject(isNil);\nconst removeNilFormData = compose(reject(either(isNil, isEmpty)), prop('formData'));\nconst getFieldNameBuilder = field => key => compose(\n  join('.'),\n  rejectNil\n)([field, key]);\n\n/**\n   * Methods de comparaison\n   * @param {*} prevProps\n   * @param {*} nextProps\n   * @returns\n   */\nconst areEquals = (prevProps, nextProps) => {\n  const prevData = removeNilFormData(prevProps);\n  const nextData = removeNilFormData(nextProps);\n  const pathName = getPathName(nextProps);\n  const allErrors = getErrors(nextProps);\n  const fields = getFields(nextProps);\n  const observerFields = getObserverFields(nextProps);\n\n  const isEmptyFields = compose(isEmpty, prop('fields'));\n\n  const hasFieldErrors = ifElse(\n    compose(isNotNilOrEmpty, prop('allErrors')), // Si erreur\n    ifElse(\n      isEmptyFields,\n      T, // Si pas de fields définit et qu'il y une erreur, on renvoi true\n      compose( // Si non, on chercher la correspondance des champs qui sont en erreur\n        isNotNilOrEmpty,\n        filter(field => compose(\n          isNotNilOrEmpty,\n          path(rejectNil([pathName, field]))\n        )(allErrors)),\n        prop('fields')\n      )),\n    F\n  )({ allErrors, fields: compose(uniq, concat(observerFields))(fields) });\n\n  // Si erreur de validation, alors on rejoue tous les composants\n  if (hasFieldErrors) {\n    return false;\n  }\n\n  return equals(prevData, nextData);\n};\n\n/**\n * Fonction permettant d'améliorer les performances de rendu des composants de formulaire\n * S'utilise avec la librairie, react-hook-form\n * ATTENTION: ne pas utiliser ReactHookForm.useFormContext dans les composants enfants, cela annulerait cette\n * fonctionnalité d'optimisation\n *\n * opts = {\n *  pathName: string,\n *  observerFields: array\n * }\n * @param {object} opts\n * @returns\n */\nconst memoForm = opts => Component => {\n  const pathName = prop('pathName', opts);\n  const getFieldName = getFieldNameBuilder(pathName);\n  const MemoizedComponent = memo(Component, areEquals);\n\n  const WrapperMemoizedComponent = (props) => {\n    const methods = useFormContext();\n    const getFormValues = compose(\n      methods.getValues,\n      map(getFieldName)\n    );\n    const observerFields = propOr([], 'observerFields', opts);\n    const fields = propOr([], 'fields', opts);\n    const formData = getFormValues(observerFields);\n\n    return (\n      <MemoizedComponent\n        {...props}\n        methods={{ ...methods, getFieldName, getFormValues, pathName, observerFields, fields }}\n        formData={formData}\n      />\n    );\n  };\n  WrapperMemoizedComponent.displayName = 'WrapperMemoizedComponent';\n  return WrapperMemoizedComponent;\n};\n\nexport const memoFormPropTypes = {\n  register: propTypes.func.isRequired,\n  unregister: propTypes.func.isRequired,\n  errors: propTypes.oneOfType([propTypes.object, propTypes.string]).isRequired,\n  watch: propTypes.func.isRequired,\n  handleSubmit: propTypes.func.isRequired,\n  reset: propTypes.func.isRequired,\n  setError: propTypes.func.isRequired,\n  clearError: propTypes.func,\n  setValue: propTypes.func.isRequired,\n  getValues: propTypes.func.isRequired,\n  triggerValidation: propTypes.func,\n  control: propTypes.object.isRequired,\n  formState: propTypes.object.isRequired,\n  getFieldName: propTypes.func.isRequired,\n  getFormValues: propTypes.func.isRequired,\n  pathName: propTypes.string.isRequired\n};\n\nexport const methodsPropTypes = {\n  methods: propTypes.shape(memoFormPropTypes)\n};\n\nexport default memoForm;\n","import React, { useRef } from 'react'\nimport { Controller } from 'react-hook-form';\nimport Input from './Input';\nimport useReady from '../hooks/useReady';\nimport memoForm from '../form/memoForm';\n\nconst AddressForm2 = ({methods}) => {\n  console.log('AddressForm2');\n  const { control, watch } = methods;\n  const ref = useRef();\n  const { address1 } = watch(['address1'])\n  useReady(ref);\n\n  return (\n    <div style={{padding: '1rem 0'}} ref={ref}>\n      <Controller\n        name=\"address1\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Adresse 1\"/>}\n      />\n      <Controller\n        name=\"address2\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Adresse 2\"/>}\n      />\n      <Controller\n        name=\"zipCode\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Code postal\"/>}\n      />\n      <Controller\n        name=\"city\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Ville\"/>}\n      />\n    </div>\n  )\n}\n\nexport default memoForm({\n  observerFields: ['address1']\n})(AddressForm2)\n","import React, { useRef } from 'react'\nimport { Controller } from 'react-hook-form';\nimport useReady from '../hooks/useReady';\nimport memoForm from '../form/memoForm';\nimport FormError from './FormError';\n\nconst DescriptionForm2 = ({ methods }) => {\n  console.log('DescriptionForm2');\n  const { control, errors } = methods;\n  const ref = useRef();\n  useReady(ref);\n  console.log(errors)\n\n  return (\n    <div ref={ref}>\n      <Controller\n        name=\"description\"\n        defaultValue={null}\n        control={control}\n        rules={{required: 'Ce champ est obligatoire'}}\n        render={({onChange, value}) => <textarea onChange={onChange} placeholder=\"Description courte\">{value}</textarea>}\n      />\n\n      <FormError name=\"description\" errors={errors}/>\n    </div>\n  )\n}\n\nexport default memoForm({\n  // observerFields: ['description']\n  fields: ['description']\n})(DescriptionForm2)\n","import React, { useRef } from 'react'\nimport { Controller } from 'react-hook-form';\nimport Input from './Input';\nimport useReady from '../hooks/useReady';\nimport memoForm from '../form/memoForm';\nimport { toLower } from 'ramda';\nimport FormError from './FormError';\n\nconst ProfileForm2 = ({methods}) => {\n  console.log('ProfileForm2');\n  const ref = useRef();\n  const { control, watch, errors } = methods;\n  const {firstname} = watch(['firstname']);\n\n  useReady(ref);\n\n  const isFred = toLower(firstname || '') === 'fred';\n\n  return (\n    <div className=\"form-inline\" ref={ref}>\n      <Controller\n        name=\"firstname\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Prénom : tape fred\"/>}\n      />\n      <Controller\n        name=\"lastname\"\n        defaultValue={null}\n        control={control}\n        render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Nom\"/>}\n      />\n      {!isFred && (\n        <>\n          <div>\n            <Controller\n              name=\"email\"\n              defaultValue={null}\n              control={control}\n              render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"Email\"/>}\n              rules={{required: 'Ce champ est obligatoire'}}\n            />\n          <FormError name=\"email\" errors={errors}/>\n          </div>\n\n          <Controller\n            name=\"N° de téléphone\"\n            defaultValue={null}\n            control={control}\n            render={({onChange, value}) => <Input onChange={onChange} value={value} placeholder=\"N° de téléphone\"/>}\n          />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default memoForm({\n  observerFields: ['firstname'],\n  fields: ['email']\n})(ProfileForm2)\n","import React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport AddressForm from './AddressForm2';\nimport DescriptionForm from './DescriptionForm2';\nimport ProfileForm from './ProfileForm2';\n\nconst defaultValues = {\n  firstname: null,\n  lastname: null,\n  email: null,\n  address1: null,\n  address2: null,\n  city: null,\n  zipCode: null,\n  description: null\n}\n\nconst ContactForm2 = () => {\n  const methods = useForm({\n    defaultValues\n  });\n\n  const onSubmit = (value) => {\n    console.log(value);\n  }\n  return (\n    <div className=\"form-content\">\n      <FormProvider {...methods}>\n        <h2>Formulaire avec memo</h2>\n        <form onSubmit={methods.handleSubmit(onSubmit)}>\n          <ProfileForm/>\n          <AddressForm/>\n          <DescriptionForm/>\n          <pre>\n          {JSON.stringify(methods.getValues(), null, 2)}\n\n        </pre>\n          <button type=\"submit\">Envoyer</button>\n        </form>\n      </FormProvider>\n    </div>\n  )\n}\n\nexport default ContactForm2\n","import './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactForm2 from './components/ContactForm2';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"main-title\">React Memo Form</h1>\n      <div className=\"form-container\">\n        <ContactForm/>\n        <ContactForm2/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}